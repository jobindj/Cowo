Screen2.jLabel7.text=this should be a file with comma separated words
Screen2.openStopWordsFile.toolTipText=this should be a file with comma separated words
Screen2.openStopWordsFile.text=select your own list of stopwords
Screen2.closeParameters.text=Save
Screen2.binaryCounting.text=binary counting (terms will be counted just once per doc)
Screen2.nGrams.text=n-grams up to
Screen2.numChars.text=min chars per word
Screen2.maxWords.text=max words for the map
Screen2.maxWordsField.text=250
Screen2.minCharsField.text=3
Screen2.nGramsField.text=4
Screen2.binaryBox.text=
Screen2.jLabel3.text=Parameters
Screen2.jLabel4.text=minimum occurrences in the corpus
Screen2.minOccurrences.text=1
Screen2.jLabel5.text=(if binary counting is selected, the logic applies here too)
Screen2.jLabel6.text=for a term to be considered
Screen2.jLabel8.text=delete all characters not present in the English language
Screen2.deleteChars.text=
Screen2.jLabel9.text=use a list of stopwords specific to academic texts
Screen2.useScientificStopWords.text=
Screen2.jLabel10.text=with this feature you can extract terms from specific categories in your text
Screen2.jLabel11.text=and leave others out. Necessitates an internet connection and an API key.
Screen2.useAlchemyAPIButton.text=use AlchemyAPI
Screen3.jLabel3.text=Cowo
Screen3.jLabel2.text=create a map from a text
Screen3.jLabel1.text=<html>select the fields which you want to <b>keep</b></htmlk>
Screen3.selectionFieldsOKButton.text=OK
Screen2.selectCategoriesButton.text=select categories
Screen3.jLabel4.text=AlchemyAPI key:
Screen3.AlchemyAPIKey.text=
Screen2.jLabel1.text=words are separated by
Screen2.wordSeparator.text=\ 
Screen2.jLabel2.text=use the td-idf frequency correction measure for terms in docs
Screen2.useTDIDF.text=
